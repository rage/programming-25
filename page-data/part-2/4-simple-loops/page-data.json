{
    "componentChunkName": "component---src-templates-course-content-template-js",
    "path": "/part-2/4-simple-loops",
    "result": {"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"text-box","properties":{"variant":"learningObjectives","name":"Learning objectives"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this section"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will know what a loop means in programming"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will be able to use a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"while True"}]},{"type":"text","value":" loop in your programs"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You will know how to use the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":" command to break out of a loop"}]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We have now covered conditional structures in some detail. Another central technique in programming is repetition, or "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"iteration"}]},{"type":"text","value":". Together these form the fundamental control structures any programmer must master. They are called control structures because essentially they allow you to control which lines of code get executed when. While conditional structures allow you to "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"choose between"}]},{"type":"text","value":" sections of code, iteration structures allow you to "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"repeat"}]},{"type":"text","value":" sections of code. They are often called "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loops"}]},{"type":"text","value":" because they allow the program to \"loop back\" to some line that was already executed before. The process of executing one repetition of a loop is also referred to as an iteration of the loop."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This section introduces a simple "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" loop. Its structure is similar to the conditional statements we already covered. In the next part we will delve into some more sophisticated examples."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's have a look at a program which asks the user to type in a number and then prints out the number squared. This continues until the user types in -1."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"int"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in a number, -1 to quit: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"**"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Thanks and bye!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Running the program could look like this:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a number, -1 to quit: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n4\nPlease type in a number, -1 to quit: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":"\n16\nPlease type in a number, -1 to quit: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"10"}]},{"type":"text","value":"\n100\nPlease type in a number, -1 to quit: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"-1"}]},{"type":"text","value":"\nThanks and bye!"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you can see above, the program asks for several numbers, thanks to the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" statement in the program. When the user types in -1, the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":" command is executed, which exits the loop and execution continues from the first line after the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" block."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With loops, it is crucial that there is always a way to exit the loop at some point in the code, otherwise the repetition could go on forever. To illustrate this, let's change the above example a little:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"int"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in a number, -1 to quit: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"**"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Thanks and bye!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this version the program asks the user to type in a number "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"outside the loop"}]},{"type":"text","value":". If the user types in any other number than -1, the loop is never exited from. This forms an "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"infinite loop"}]},{"type":"text","value":", which means the block of code within the loop is repeated endlessly:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a number, -1 to quit: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2"}]},{"type":"text","value":"\n4\n4\n4\n4\n4\n4\n4\n4\n(continued ad infinitum...)"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following program has a similar structure to the example above the infinite loop, but the user experience is quite different. This program allows the user to proceed only if they type in the correct PIN "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"1234"}]},{"type":"text","value":":"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in your PIN: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"1234\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Incorrect...try again\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Correct PIN entered!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0000"}]},{"type":"text","value":"\nIncorrect...try again\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"9999"}]},{"type":"text","value":"\nIncorrect...try again\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1234"}]},{"type":"text","value":"\nCorrect PIN entered!"}]}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"Shall we continue?","tmcname":"part02-15_shall_we_continue"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's create a program along the lines of the example above. This program should print out the message \"hi\" and then ask \"Shall we continue?\" until the user inputs \"no\". Then the program should print out \"okay then\" and finish. Please have a look at the example below."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"hi\nShall we continue? "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"yes"}]},{"type":"text","value":"\nhi\nShall we continue? "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"oui"}]},{"type":"text","value":"\nhi\nShall we continue? "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"jawohl"}]},{"type":"text","value":"\nhi\nShall we continue? "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"no"}]},{"type":"text","value":"\nokay then"}]}]}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"Input validation","tmcname":"part02-16_input_validation"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a program which asks the user for integer numbers."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the number is below zero, the program should print out the message \"Invalid number\"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the number is above zero, the program should print out the square root of the number using the Python "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"sqrt"}]},{"type":"text","value":" function."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In either case, the program should then ask for another number."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the user inputs the number zero, the program should stop asking for numbers and exit the loop."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Below you'll find a reminder of how the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"sqrt"}]},{"type":"text","value":" function is used. Remember to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" it in the beginning of the program."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# sqrt function will not work without this line in the beginning of the program"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" math "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" sqrt\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"sqrt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"9"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"3.0"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An example of expected behaviour of your program:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a number: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"16"}]},{"type":"text","value":"\n4.0\nPlease type in a number: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"4"}]},{"type":"text","value":"\n2.0\nPlease type in a number: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"-3"}]},{"type":"text","value":"\nInvalid number\nPlease type in a number: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n1.0\nPlease type in a number: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"\nExiting..."}]}]}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"Fix the code: Countdown","tmcname":"part02-17_countdown"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This program should print out a countdown. The code is as follows:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"5"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Countdown!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"text","value":"number"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n  number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" number "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Now!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This should print out"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Countdown!\n5\n4\n3\n2\n1\nNow!"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, the program doesn't quite work. Please fix it."}]}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"Repeat password","tmcname":"part02-18_repeat_password"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a program which asks the user for a password. The program should then ask the user to type in the password again. If the user types in something else than the first password, the program should keep on asking until the user types the first password again correctly."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Have a look at the expected behaviour below:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Password: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"sekred"}]},{"type":"text","value":"\nRepeat password: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"secret"}]},{"type":"text","value":"\nThey do not match!\nRepeat password: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"cantremember"}]},{"type":"text","value":"\nThey do not match!\nRepeat password: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"sekred"}]},{"type":"text","value":"\nUser account created!"}]}]}]},{"type":"element","tagName":"h2","properties":{"id":"loops-and-helper-variables","style":"position:relative;"},"children":[{"type":"text","value":"Loops and helper variables"},{"type":"element","tagName":"a","properties":{"href":"#loops-and-helper-variables","ariaLabel":"loops and helper variables permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's make the PIN checking example a bit more realistic. This version gives the user only three attempts at typing in a PIN."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The program uses two helper variables. The variable "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"attempts"}]},{"type":"text","value":" keeps track of how many times the user has typed in a PIN. The variable "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"success"}]},{"type":"text","value":" is set to either "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"True"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"False"}]},{"type":"text","value":" based on whether the user is successful in signing in."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in your PIN: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"1234\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        success "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        success "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"False"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# this is printed if the code was incorrect AND there have been less than three attempts"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Incorrect...try again\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" success"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Correct PIN entered!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"else"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Too many attempts...\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0000"}]},{"type":"text","value":"\nIncorrect...try again\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1234"}]},{"type":"text","value":"\nCorrect PIN entered!"}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0000"}]},{"type":"text","value":"\nIncorrect...try again\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"9999"}]},{"type":"text","value":"\nIncorrect...try again\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"4321"}]},{"type":"text","value":"\nToo many attempts..."}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The loop is exited "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"either"}]},{"type":"text","value":" when the user types the correct PIN "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"or"}]},{"type":"text","value":" if there have been too many attempts. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" statement after the loop checks the value of the variable "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"success"}]},{"type":"text","value":" and prints out a message accordingly."}]},{"type":"element","tagName":"h2","properties":{"id":"debugging-print-statements-in-loops","style":"position:relative;"},"children":[{"type":"text","value":"Debugging print statements in loops"},{"type":"element","tagName":"a","properties":{"href":"#debugging-print-statements-in-loops","ariaLabel":"debugging print statements in loops permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Adding loops to programs also adds to the potential sources of bugs. It becomes even more important to master the use of debugging print statements as introduced in the "},{"type":"element","tagName":"a","properties":{"href":"/part-2/1-programming-terminology"},"children":[{"type":"text","value":"first section of this part"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's have a look at a program almost identical to the previous example, but with one crucial difference:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in your PIN: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        success "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"False"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"1234\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        success "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Incorrect...try again\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" success"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Correct PIN entered!\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"else"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Too many attempts...\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This version acts strangely when the user types in the correct code on the third attempt:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0000"}]},{"type":"text","value":"\nIncorrect...try again\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"9999"}]},{"type":"text","value":"\nIncorrect...try again\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1234"}]},{"type":"text","value":"\nToo many attempts..."}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So, let's try and find the cause by adding some strategic debugging print statements inside the loop:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"beginning of the while block:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in your PIN: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"attempts:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" attempts"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"condition1:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        success "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"False"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"code:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" code"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"condition2:\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"1234\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"1234\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        success "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"print"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Incorrect...try again\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]}]}]}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"beginning of the while block:\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2233"}]},{"type":"text","value":"\nattempts: 1\ncondition1: False\ncode: 2233\ncondition2: False\nIncorrect...try again\nbeginning of the while block:\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"4545"}]},{"type":"text","value":"\nattempts: 2\ncondition1: False\ncode: 4545\ncondition2: False\nIncorrect...try again\nbeginning of the while block:\nPlease type in your PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1234"}]},{"type":"text","value":"\nattempts: 3\ncondition1: True\nToo many attempts..."}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"From the above printouts we can see that during the third iteration of the loop the condition of the first "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" statement is "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"True"}]},{"type":"text","value":", and the loop is exited. This iteration never gets to the second "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" statement, which checks whether the code was typed in correctly:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# ...."}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# this block is executed too early"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        success "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"False"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]},{"type":"text","value":"\n\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# the third iteration never gets this far"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"if"}]},{"type":"text","value":" code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"=="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"1234\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n        success "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"text","value":"\n        "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"break"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The order of conditional statements, or of different branches within a conditional statement, is a common cause for bugs, especially in loops. Debugging print statements are often the simplest way of finding their cause."}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"PIN and number of attempts","tmcname":"part02-19_pin_and_number_of_attempts"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a program which keeps asking the user for a PIN code until they type in the correct one, which is "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"4321"}]},{"type":"text","value":". The program should then print out the number of times the user tried different codes."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"3245"}]},{"type":"text","value":"\nWrong\nPIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1234"}]},{"type":"text","value":"\nWrong\nPIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0000"}]},{"type":"text","value":"\nWrong\nPIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"4321"}]},{"type":"text","value":"\nCorrect! It took you 4 attempts"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the user gets it right on the first try, the program should print out something a bit different:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"PIN: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"4321"}]},{"type":"text","value":"\nCorrect! It only took you one single attempt!"}]}]}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"The next leap year","tmcname":"part02-20_next_leap_year"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a program which asks the user for a year, and prints out the next leap year."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Year: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2023"}]},{"type":"text","value":"\nThe next leap year after 2023 is 2024"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the user inputs a year which is a leap year (such as 2024), the program should print out the following leap year:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Year: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2024"}]},{"type":"text","value":"\nThe next leap year after 2024 is 2028"}]}]}]},{"type":"element","tagName":"h2","properties":{"id":"concatenating-strings-with-the--operator","style":"position:relative;"},"children":[{"type":"text","value":"Concatenating strings with the + operator"},{"type":"element","tagName":"a","properties":{"href":"#concatenating-strings-with-the--operator","ariaLabel":"concatenating strings with the  operator permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The above example with PIN checking used a helper variable "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"attempts"}]},{"type":"text","value":" to keep track of how many times the user had tried to type in a code:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in your PIN: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# ..."}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The variable is set to zero outside the loop, and each iteration increases its value by one."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A similar idea of incrementation works with string variables as well. The program could, for instance, keep track of all the PIN codes the user typed in:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"\ncodes "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"\""}]},{"type":"text","value":"\nattempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"while"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","boolean"]},"children":[{"type":"text","value":"True"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in your PIN: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    attempts "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":"\n    codes "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+="}]},{"type":"text","value":" code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\", \""}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# ..."}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The helper variable is initialized to "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"an empty string"}]},{"type":"text","value":", that is, a string with no characters in it:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"codes "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"\""}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With each iteration the string gets longer, as the code the user typed in is added, along with a comma:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"python"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-python"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-python"]},"children":[{"type":"text","value":"    code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","builtin"]},"children":[{"type":"text","value":"input"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Please type in your PIN: \""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n    codes "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+="}]},{"type":"text","value":" code "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"+"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\", \""}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the user types in the codes "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"1111 2222 1234"}]},{"type":"text","value":", at the end of the program's execution the value of "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"codes"}]},{"type":"text","value":" would be"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1111, 2222, 1234,"}]}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"Story","tmcname":"part02-21_story"},"children":[{"type":"element","tagName":"h3","properties":{"id":"part-1","style":"position:relative;"},"children":[{"type":"text","value":"Part 1"},{"type":"element","tagName":"a","properties":{"href":"#part-1","ariaLabel":"part 1 permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a program which keeps asking the user for words. If the user types in "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"end"}]},{"type":"text","value":", the program should print out the story the words formed, and finish."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Once"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"upon"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"a"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"time"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"there"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"was"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"a"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"girl"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"end"}]},{"type":"text","value":"\nOnce upon a time there was a girl"}]}]},{"type":"element","tagName":"h3","properties":{"id":"part-2","style":"position:relative;"},"children":[{"type":"text","value":"Part 2"},{"type":"element","tagName":"a","properties":{"href":"#part-2","ariaLabel":"part 2 permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Change the program so that the loop ends also if the user types in the same word twice in a row."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"It"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"was"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"a"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"dark"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"and"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"stormy"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"night"}]},{"type":"text","value":"\nPlease type in a word: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"night"}]},{"type":"text","value":"\nIt was a dark and stormy night"}]}]}]},{"type":"element","tagName":"in-browser-programming-exercise","properties":{"name":"Working with numbers","tmcname":"part02-22_working_with_numbers"},"children":[{"type":"element","tagName":"h3","properties":{"id":"pre-task","style":"position:relative;"},"children":[{"type":"text","value":"Pre-task"},{"type":"element","tagName":"a","properties":{"href":"#pre-task","ariaLabel":"pre task permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please write a program which asks the user for integer numbers. The program should keep asking for numbers until the user types in zero."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please type in integer numbers. Type in 0 to finish.\nNumber: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5"}]},{"type":"text","value":"\nNumber: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"22"}]},{"type":"text","value":"\nNumber: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"9"}]},{"type":"text","value":"\nNumber: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"-2"}]},{"type":"text","value":"\nNumber: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"0"}]}]}]},{"type":"element","tagName":"h3","properties":{"id":"part-1-count","style":"position:relative;"},"children":[{"type":"text","value":"Part 1: Count"},{"type":"element","tagName":"a","properties":{"href":"#part-1-count","ariaLabel":"part 1 count permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After reading in the numbers the program should print out how many numbers were typed in. The zero at the end should not be included in the count."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You will need a new variable here to keep track of the numbers typed in."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"... the program asks for numbers\nNumbers typed in 4"}]}]},{"type":"element","tagName":"h3","properties":{"id":"part-2-sum","style":"position:relative;"},"children":[{"type":"text","value":"Part 2: Sum"},{"type":"element","tagName":"a","properties":{"href":"#part-2-sum","ariaLabel":"part 2 sum permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The program should also print out the sum of all the numbers typed in. The zero at the end should not be included in the calculation."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The program should now print out the following:"}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"... the program asks for numbers\nNumbers typed in 4\nThe sum of the numbers is 34"}]}]},{"type":"element","tagName":"h3","properties":{"id":"part-3-mean","style":"position:relative;"},"children":[{"type":"text","value":"Part 3: Mean"},{"type":"element","tagName":"a","properties":{"href":"#part-3-mean","ariaLabel":"part 3 mean permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The program should also print out the mean of the numbers. The zero at the end should not be included in the calculation. You may assume the user will always type in at least one valid non-zero number."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"... the program asks for numbers\nNumbers typed in 4\nThe sum of the numbers is 34\nThe mean of the numbers is 8.5"}]}]},{"type":"element","tagName":"h4","properties":{"id":"part-4-positives-and-negatives","style":"position:relative;"},"children":[{"type":"text","value":"Part 4: Positives and negatives"},{"type":"element","tagName":"a","properties":{"href":"#part-4-positives-and-negatives","ariaLabel":"part 4 positives and negatives permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The program should also print out statistics on how many of the numbers were positive and how many were negative. The zero at the end should not be included in the calculation."}]},{"type":"element","tagName":"sample-output","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"... the program asks for numbers\nNumbers typed in 4\nThe sum of the numbers is 34\nThe mean of the numbers is 8.5\nPositive numbers 3\nNegative numbers 1"}]}]}]},{"type":"comment","value":"\n\nA quiz to review the contents of this section:\n\n<quiz id=\"63a51999-e525-5f1d-a333-b26392a5585b\"></quiz>\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Please respond to a quick questionnaire on this week's materials."}]},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"quiz","properties":{"id":"5ab8aa39-8d52-5fb7-ac91-253bba93c84b"},"children":[]}]}]},"html":"<div><text-box variant='learningObjectives' name=\"Learning objectives\"><p>After this section</p><ul>\n<li>You will know what a loop means in programming</li>\n<li>You will be able to use a <code class=\"language-text\">while True</code> loop in your programs</li>\n<li>You will know how to use the <code class=\"language-text\">break</code> command to break out of a loop</li>\n</ul></text-box><p>We have now covered conditional structures in some detail. Another central technique in programming is repetition, or <em>iteration</em>. Together these form the fundamental control structures any programmer must master. They are called control structures because essentially they allow you to control which lines of code get executed when. While conditional structures allow you to <em>choose between</em> sections of code, iteration structures allow you to <em>repeat</em> sections of code. They are often called <em>loops</em> because they allow the program to \"loop back\" to some line that was already executed before. The process of executing one repetition of a loop is also referred to as an iteration of the loop.</p><p>This section introduces a simple <code class=\"language-text\">while</code> loop. Its structure is similar to the conditional statements we already covered. In the next part we will delve into some more sophisticated examples.</p><p>Let's have a look at a program which asks the user to type in a number and then prints out the number squared. This continues until the user types in -1.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    number <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in a number, -1 to quit: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> number <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thanks and bye!\"</span><span class=\"token punctuation\">)</span></code></pre></div><p>Running the program could look like this:</p><sample-output><p>Please type in a number, -1 to quit: <strong>2</strong>\n4\nPlease type in a number, -1 to quit: <strong>4</strong>\n16\nPlease type in a number, -1 to quit: <strong>10</strong>\n100\nPlease type in a number, -1 to quit: <strong>-1</strong>\nThanks and bye!</p></sample-output><p>As you can see above, the program asks for several numbers, thanks to the <code class=\"language-text\">while</code> statement in the program. When the user types in -1, the <code class=\"language-text\">break</code> command is executed, which exits the loop and execution continues from the first line after the <code class=\"language-text\">while</code> block.</p><p>With loops, it is crucial that there is always a way to exit the loop at some point in the code, otherwise the repetition could go on forever. To illustrate this, let's change the above example a little:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in a number, -1 to quit: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> number <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Thanks and bye!\"</span><span class=\"token punctuation\">)</span></code></pre></div><p>In this version the program asks the user to type in a number <em>outside the loop</em>. If the user types in any other number than -1, the loop is never exited from. This forms an <em>infinite loop</em>, which means the block of code within the loop is repeated endlessly:</p><sample-output><p>Please type in a number, -1 to quit: <strong>2</strong>\n4\n4\n4\n4\n4\n4\n4\n4\n(continued ad infinitum...)</p></sample-output><p>The following program has a similar structure to the example above the infinite loop, but the user experience is quite different. This program allows the user to proceed only if they type in the correct PIN <em>1234</em>:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    code <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in your PIN: \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> code <span class=\"token operator\">==</span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Incorrect...try again\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Correct PIN entered!\"</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>Please type in your PIN: <strong>0000</strong>\nIncorrect...try again\nPlease type in your PIN: <strong>9999</strong>\nIncorrect...try again\nPlease type in your PIN: <strong>1234</strong>\nCorrect PIN entered!</p></sample-output><in-browser-programming-exercise name=\"Shall we continue?\" tmcname=\"part02-15_shall_we_continue\"><p>Let's create a program along the lines of the example above. This program should print out the message \"hi\" and then ask \"Shall we continue?\" until the user inputs \"no\". Then the program should print out \"okay then\" and finish. Please have a look at the example below.</p><sample-output><p>hi\nShall we continue? <strong>yes</strong>\nhi\nShall we continue? <strong>oui</strong>\nhi\nShall we continue? <strong>jawohl</strong>\nhi\nShall we continue? <strong>no</strong>\nokay then</p></sample-output></in-browser-programming-exercise><in-browser-programming-exercise name=\"Input validation\" tmcname=\"part02-16_input_validation\"><p>Please write a program which asks the user for integer numbers.</p><p>If the number is below zero, the program should print out the message \"Invalid number\".</p><p>If the number is above zero, the program should print out the square root of the number using the Python <code class=\"language-text\">sqrt</code> function.</p><p>In either case, the program should then ask for another number.</p><p>If the user inputs the number zero, the program should stop asking for numbers and exit the loop.</p><p>Below you'll find a reminder of how the <code class=\"language-text\">sqrt</code> function is used. Remember to <code class=\"language-text\">import</code> it in the beginning of the program.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># sqrt function will not work without this line in the beginning of the program</span>\n<span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> sqrt\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>3.0</p></sample-output><p>An example of expected behaviour of your program:</p><sample-output><p>Please type in a number: <strong>16</strong>\n4.0\nPlease type in a number: <strong>4</strong>\n2.0\nPlease type in a number: <strong>-3</strong>\nInvalid number\nPlease type in a number: <strong>1</strong>\n1.0\nPlease type in a number: <strong>0</strong>\nExiting...</p></sample-output></in-browser-programming-exercise><in-browser-programming-exercise name=\"Fix the code: Countdown\" tmcname=\"part02-17_countdown\"><p>This program should print out a countdown. The code is as follows:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Countdown!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n  number <span class=\"token operator\">=</span> number <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">if</span> number <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">break</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Now!\"</span><span class=\"token punctuation\">)</span></code></pre></div><p>This should print out</p><sample-output><p>Countdown!\n5\n4\n3\n2\n1\nNow!</p></sample-output><p>However, the program doesn't quite work. Please fix it.</p></in-browser-programming-exercise><in-browser-programming-exercise name=\"Repeat password\" tmcname=\"part02-18_repeat_password\"><p>Please write a program which asks the user for a password. The program should then ask the user to type in the password again. If the user types in something else than the first password, the program should keep on asking until the user types the first password again correctly.</p><p>Have a look at the expected behaviour below:</p><sample-output><p>Password: <strong>sekred</strong>\nRepeat password: <strong>secret</strong>\nThey do not match!\nRepeat password: <strong>cantremember</strong>\nThey do not match!\nRepeat password: <strong>sekred</strong>\nUser account created!</p></sample-output></in-browser-programming-exercise><h2 id=\"loops-and-helper-variables\" style=\"position:relative;\">Loops and helper variables<a href=\"#loops-and-helper-variables\" aria-label=\"loops and helper variables permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Let's make the PIN checking example a bit more realistic. This version gives the user only three attempts at typing in a PIN.</p><p>The program uses two helper variables. The variable <code class=\"language-text\">attempts</code> keeps track of how many times the user has typed in a PIN. The variable <code class=\"language-text\">success</code> is set to either <code class=\"language-text\">True</code> or <code class=\"language-text\">False</code> based on whether the user is successful in signing in.</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">attempts <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    code <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in your PIN: \"</span><span class=\"token punctuation\">)</span>\n    attempts <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">if</span> code <span class=\"token operator\">==</span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">:</span>\n        success <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">if</span> attempts <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        success <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">break</span>\n\n    <span class=\"token comment\"># this is printed if the code was incorrect AND there have been less than three attempts</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Incorrect...try again\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Correct PIN entered!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Too many attempts...\"</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>Please type in your PIN: <strong>0000</strong>\nIncorrect...try again\nPlease type in your PIN: <strong>1234</strong>\nCorrect PIN entered!</p></sample-output><sample-output><p>Please type in your PIN: <strong>0000</strong>\nIncorrect...try again\nPlease type in your PIN: <strong>9999</strong>\nIncorrect...try again\nPlease type in your PIN: <strong>4321</strong>\nToo many attempts...</p></sample-output><p>The loop is exited <em>either</em> when the user types the correct PIN <em>or</em> if there have been too many attempts. The <code class=\"language-text\">if</code> statement after the loop checks the value of the variable <code class=\"language-text\">success</code> and prints out a message accordingly.</p><h2 id=\"debugging-print-statements-in-loops\" style=\"position:relative;\">Debugging print statements in loops<a href=\"#debugging-print-statements-in-loops\" aria-label=\"debugging print statements in loops permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>Adding loops to programs also adds to the potential sources of bugs. It becomes even more important to master the use of debugging print statements as introduced in the <a href=\"/part-2/1-programming-terminology\">first section of this part</a>.</p><p>Let's have a look at a program almost identical to the previous example, but with one crucial difference:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">attempts <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    code <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in your PIN: \"</span><span class=\"token punctuation\">)</span>\n    attempts <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">if</span> attempts <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        success <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">if</span> code <span class=\"token operator\">==</span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">:</span>\n        success <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Incorrect...try again\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Correct PIN entered!\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Too many attempts...\"</span><span class=\"token punctuation\">)</span></code></pre></div><p>This version acts strangely when the user types in the correct code on the third attempt:</p><sample-output><p>Please type in your PIN: <strong>0000</strong>\nIncorrect...try again\nPlease type in your PIN: <strong>9999</strong>\nIncorrect...try again\nPlease type in your PIN: <strong>1234</strong>\nToo many attempts...</p></sample-output><p>So, let's try and find the cause by adding some strategic debugging print statements inside the loop:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"beginning of the while block:\"</span><span class=\"token punctuation\">)</span>\n    code <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in your PIN: \"</span><span class=\"token punctuation\">)</span>\n    attempts <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"attempts:\"</span><span class=\"token punctuation\">,</span> attempts<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"condition1:\"</span><span class=\"token punctuation\">,</span> attempts <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> attempts <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        success <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"code:\"</span><span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"condition2:\"</span><span class=\"token punctuation\">,</span> code <span class=\"token operator\">==</span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> code <span class=\"token operator\">==</span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">:</span>\n        success <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">break</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Incorrect...try again\"</span><span class=\"token punctuation\">)</span></code></pre></div><sample-output><p>beginning of the while block:\nPlease type in your PIN: <strong>2233</strong>\nattempts: 1\ncondition1: False\ncode: 2233\ncondition2: False\nIncorrect...try again\nbeginning of the while block:\nPlease type in your PIN: <strong>4545</strong>\nattempts: 2\ncondition1: False\ncode: 4545\ncondition2: False\nIncorrect...try again\nbeginning of the while block:\nPlease type in your PIN: <strong>1234</strong>\nattempts: 3\ncondition1: True\nToo many attempts...</p></sample-output><p>From the above printouts we can see that during the third iteration of the loop the condition of the first <code class=\"language-text\">if</code> statement is <code class=\"language-text\">True</code>, and the loop is exited. This iteration never gets to the second <code class=\"language-text\">if</code> statement, which checks whether the code was typed in correctly:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">  <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># ....</span>\n\n    <span class=\"token comment\"># this block is executed too early</span>\n    <span class=\"token keyword\">if</span> attempts <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        success <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        <span class=\"token keyword\">break</span>\n\n    <span class=\"token comment\"># the third iteration never gets this far</span>\n    <span class=\"token keyword\">if</span> code <span class=\"token operator\">==</span> <span class=\"token string\">\"1234\"</span><span class=\"token punctuation\">:</span>\n        success <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">break</span></code></pre></div><p>The order of conditional statements, or of different branches within a conditional statement, is a common cause for bugs, especially in loops. Debugging print statements are often the simplest way of finding their cause.</p><in-browser-programming-exercise name=\"PIN and number of attempts\" tmcname=\"part02-19_pin_and_number_of_attempts\"><p>Please write a program which keeps asking the user for a PIN code until they type in the correct one, which is <em>4321</em>. The program should then print out the number of times the user tried different codes.</p><sample-output><p>PIN: <strong>3245</strong>\nWrong\nPIN: <strong>1234</strong>\nWrong\nPIN: <strong>0000</strong>\nWrong\nPIN: <strong>4321</strong>\nCorrect! It took you 4 attempts</p></sample-output><p>If the user gets it right on the first try, the program should print out something a bit different:</p><sample-output><p>PIN: <strong>4321</strong>\nCorrect! It only took you one single attempt!</p></sample-output></in-browser-programming-exercise><in-browser-programming-exercise name=\"The next leap year\" tmcname=\"part02-20_next_leap_year\"><p>Please write a program which asks the user for a year, and prints out the next leap year.</p><sample-output><p>Year: <strong>2023</strong>\nThe next leap year after 2023 is 2024</p></sample-output><p>If the user inputs a year which is a leap year (such as 2024), the program should print out the following leap year:</p><sample-output><p>Year: <strong>2024</strong>\nThe next leap year after 2024 is 2028</p></sample-output></in-browser-programming-exercise><h2 id=\"concatenating-strings-with-the--operator\" style=\"position:relative;\">Concatenating strings with the + operator<a href=\"#concatenating-strings-with-the--operator\" aria-label=\"concatenating strings with the  operator permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2><p>The above example with PIN checking used a helper variable <code class=\"language-text\">attempts</code> to keep track of how many times the user had tried to type in a code:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">attempts <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    code <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in your PIN: \"</span><span class=\"token punctuation\">)</span>\n    attempts <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token comment\"># ...</span></code></pre></div><p>The variable is set to zero outside the loop, and each iteration increases its value by one.</p><p>A similar idea of incrementation works with string variables as well. The program could, for instance, keep track of all the PIN codes the user typed in:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">\ncodes <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\nattempts <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    code <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in your PIN: \"</span><span class=\"token punctuation\">)</span>\n    attempts <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    codes <span class=\"token operator\">+=</span> code <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span>\n    <span class=\"token comment\"># ...</span></code></pre></div><p>The helper variable is initialized to <em>an empty string</em>, that is, a string with no characters in it:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">codes <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></code></pre></div><p>With each iteration the string gets longer, as the code the user typed in is added, along with a comma:</p><div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    code <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Please type in your PIN: \"</span><span class=\"token punctuation\">)</span>\n    codes <span class=\"token operator\">+=</span> code <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span></code></pre></div><p>If the user types in the codes <em>1111 2222 1234</em>, at the end of the program's execution the value of <code class=\"language-text\">codes</code> would be</p><sample-output><p>1111, 2222, 1234,</p></sample-output><in-browser-programming-exercise name=\"Story\" tmcname=\"part02-21_story\"><h3 id=\"part-1\" style=\"position:relative;\">Part 1<a href=\"#part-1\" aria-label=\"part 1 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>Please write a program which keeps asking the user for words. If the user types in <code class=\"language-text\">end</code>, the program should print out the story the words formed, and finish.</p><sample-output><p>Please type in a word: <strong>Once</strong>\nPlease type in a word: <strong>upon</strong>\nPlease type in a word: <strong>a</strong>\nPlease type in a word: <strong>time</strong>\nPlease type in a word: <strong>there</strong>\nPlease type in a word: <strong>was</strong>\nPlease type in a word: <strong>a</strong>\nPlease type in a word: <strong>girl</strong>\nPlease type in a word: <strong>end</strong>\nOnce upon a time there was a girl</p></sample-output><h3 id=\"part-2\" style=\"position:relative;\">Part 2<a href=\"#part-2\" aria-label=\"part 2 permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>Change the program so that the loop ends also if the user types in the same word twice in a row.</p><sample-output><p>Please type in a word: <strong>It</strong>\nPlease type in a word: <strong>was</strong>\nPlease type in a word: <strong>a</strong>\nPlease type in a word: <strong>dark</strong>\nPlease type in a word: <strong>and</strong>\nPlease type in a word: <strong>stormy</strong>\nPlease type in a word: <strong>night</strong>\nPlease type in a word: <strong>night</strong>\nIt was a dark and stormy night</p></sample-output></in-browser-programming-exercise><in-browser-programming-exercise name=\"Working with numbers\" tmcname=\"part02-22_working_with_numbers\"><h3 id=\"pre-task\" style=\"position:relative;\">Pre-task<a href=\"#pre-task\" aria-label=\"pre task permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>Please write a program which asks the user for integer numbers. The program should keep asking for numbers until the user types in zero.</p><sample-output><p>Please type in integer numbers. Type in 0 to finish.\nNumber: <strong>5</strong>\nNumber: <strong>22</strong>\nNumber: <strong>9</strong>\nNumber: <strong>-2</strong>\nNumber: <strong>0</strong></p></sample-output><h3 id=\"part-1-count\" style=\"position:relative;\">Part 1: Count<a href=\"#part-1-count\" aria-label=\"part 1 count permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>After reading in the numbers the program should print out how many numbers were typed in. The zero at the end should not be included in the count.</p><p>You will need a new variable here to keep track of the numbers typed in.</p><sample-output><p>... the program asks for numbers\nNumbers typed in 4</p></sample-output><h3 id=\"part-2-sum\" style=\"position:relative;\">Part 2: Sum<a href=\"#part-2-sum\" aria-label=\"part 2 sum permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>The program should also print out the sum of all the numbers typed in. The zero at the end should not be included in the calculation.</p><p>The program should now print out the following:</p><sample-output><p>... the program asks for numbers\nNumbers typed in 4\nThe sum of the numbers is 34</p></sample-output><h3 id=\"part-3-mean\" style=\"position:relative;\">Part 3: Mean<a href=\"#part-3-mean\" aria-label=\"part 3 mean permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>The program should also print out the mean of the numbers. The zero at the end should not be included in the calculation. You may assume the user will always type in at least one valid non-zero number.</p><sample-output><p>... the program asks for numbers\nNumbers typed in 4\nThe sum of the numbers is 34\nThe mean of the numbers is 8.5</p></sample-output><h4 id=\"part-4-positives-and-negatives\" style=\"position:relative;\">Part 4: Positives and negatives<a href=\"#part-4-positives-and-negatives\" aria-label=\"part 4 positives and negatives permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4><p>The program should also print out statistics on how many of the numbers were positive and how many were negative. The zero at the end should not be included in the calculation.</p><sample-output><p>... the program asks for numbers\nNumbers typed in 4\nThe sum of the numbers is 34\nThe mean of the numbers is 8.5\nPositive numbers 3\nNegative numbers 1</p></sample-output></in-browser-programming-exercise><!--\n\nA quiz to review the contents of this section:\n\n<quiz id=\"63a51999-e525-5f1d-a333-b26392a5585b\"></quiz>\n\n--><p>Please respond to a quick questionnaire on this week's materials.</p><div><quiz id=\"5ab8aa39-8d52-5fb7-ac91-253bba93c84b\"></quiz></div></div>","frontmatter":{"path":"/part-2/4-simple-loops","title":"Simple loops"},"fileAbsolutePath":"/home/runner/work/programming-25/programming-25/data/part-2/4-simple-loops.md"},"allPages":{"edges":[{"node":{"id":"89bd9cd2-345c-5504-88e8-caff10bb0994","frontmatter":{"path":"/all-exercises","title":"All exercises"}}},{"node":{"id":"9a9176a0-ecc1-5207-a9a8-c5555e3f0a91","frontmatter":{"path":"/error_messages","title":"Common error messages"}}},{"node":{"id":"02f33ed4-272f-5429-9ea2-1ba1211d7887","frontmatter":{"path":"/exam","title":"Exam 4.6."}}},{"node":{"id":"1153df08-59b4-5904-b9b8-a86cc3bb5bac","frontmatter":{"path":"/exam-adv","title":"Advanced Course in Programming exam 14.12."}}},{"node":{"id":"f1144817-5424-5baa-86bb-adc864f37ee4","frontmatter":{"path":"/exam-intro","title":"Introduction to Programming exam 23.11."}}},{"node":{"id":"019a1786-b6b5-58d4-a063-f39e478d5f1c","frontmatter":{"path":"/faq","title":"Frequently asked questions"}}},{"node":{"id":"90ba007f-5e99-555d-8eb6-01f8774da5b3","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"590d3663-8e25-5034-abdb-81ed9acc030a","frontmatter":{"path":"/grading-and-exams","title":"Grading and exams"}}},{"node":{"id":"7bd198cc-90e0-5efb-8ada-42c867b25d84","frontmatter":{"path":"/","title":"About this course"}}},{"node":{"id":"91814e3b-af4d-574d-a7af-7051da57d8b8","frontmatter":{"path":"/support-and-assistance","title":"Support and assistance"}}},{"node":{"id":"5f365f62-9eb1-5c06-b47d-5ced742c5968","frontmatter":{"path":"/glossary","title":"Glossary"}}},{"node":{"id":"fe5afddd-4403-563e-9661-758c5f5bd072","frontmatter":{"path":"/part-1/1-getting-started","title":"Getting started"}}},{"node":{"id":"e35acfbb-9a74-5359-9b1d-39895502af25","frontmatter":{"path":"/part-1/2-information-from-the-user","title":"Information from the user"}}},{"node":{"id":"1c4ecef9-43bf-5ee6-b3ad-c8cf02421f71","frontmatter":{"path":"/part-1/3-more-about-variables","title":"More about variables"}}},{"node":{"id":"74def0e3-9095-5862-893f-43f6743b0177","frontmatter":{"path":"/part-1/4-arithmetic-operations","title":"Arithmetic operations"}}},{"node":{"id":"c6f6601c-7576-58c7-b558-784b85e4d63e","frontmatter":{"path":"/part-1/5-conditional-statements","title":"Conditional statements"}}},{"node":{"id":"8f5f815b-ca69-5c4a-9f32-12df199cbca6","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"6967fd3b-9a1f-5246-8bc6-2e8415ce6266","frontmatter":{"path":"/part-10/1-class-hierarchies","title":"Class hierarchies"}}},{"node":{"id":"24948c71-fb82-50df-bed4-0849f37acddc","frontmatter":{"path":"/part-10/2-access-modifiers","title":"Access modifiers"}}},{"node":{"id":"3b445154-e42c-5751-8364-3d8151389792","frontmatter":{"path":"/part-10/3-oo-programming-techniques","title":"Object oriented programming techniques"}}},{"node":{"id":"67c47ece-8b26-5084-9a65-7b9eafb2758a","frontmatter":{"path":"/part-10/4-application-development","title":"Developing a larger application"}}},{"node":{"id":"f2e30426-d0d0-5b68-94ce-925970c60f3e","frontmatter":{"path":"/part-10","title":"Part 10"}}},{"node":{"id":"acf7bd6d-e2d3-54f8-bbc5-a92ed4cc67a3","frontmatter":{"path":"/part-11/1-list-comprehensions","title":"List comprehensions"}}},{"node":{"id":"225cd554-b69c-583a-9452-09d8ce44f0e1","frontmatter":{"path":"/part-11/2-more-comprehensions","title":"More comprehensions"}}},{"node":{"id":"8a36defd-753e-5988-a3a2-a96aac99c401","frontmatter":{"path":"/part-11/3-recursion","title":"Recursion"}}},{"node":{"id":"61f87647-01bf-512d-a781-779666fa5b36","frontmatter":{"path":"/part-11/4-more-recursion-examples","title":"More recursion examples"}}},{"node":{"id":"ff7562cf-bb25-5dc0-bfe7-028c8893a578","frontmatter":{"path":"/part-11","title":"Part 11"}}},{"node":{"id":"3ab27a64-5349-5af1-bb70-5272a65a8966","frontmatter":{"path":"/part-12/1-functions-as-arguments","title":"Functions as arguments"}}},{"node":{"id":"eb92132c-6c22-5766-9cd5-44558f4d6575","frontmatter":{"path":"/part-12/3-functional-programming","title":"Functional programming"}}},{"node":{"id":"58a6a7aa-52d8-5ba8-b1d9-863885f71371","frontmatter":{"path":"/part-12/4-regular-expressions","title":"Regular expressions"}}},{"node":{"id":"f0a2589c-9232-5b02-a071-574103634ffc","frontmatter":{"path":"/part-12/2-generators","title":"Generators"}}},{"node":{"id":"db3f0f88-1889-5cb8-bc88-fe9b43497edd","frontmatter":{"path":"/part-12","title":"Part 12"}}},{"node":{"id":"3c471fe9-32b9-57c3-bc20-d5ed038d7566","frontmatter":{"path":"/part-13/1-pygame","title":"Pygame"}}},{"node":{"id":"97f7629c-f362-5a85-9c8f-3d60ab5aa1ff","frontmatter":{"path":"/part-13/2-animation","title":"Animation"}}},{"node":{"id":"00c7fa45-9b3c-5624-904c-3673edce3aaa","frontmatter":{"path":"/part-13/4-more-pygame-techniques","title":"More pygame techniques"}}},{"node":{"id":"217a378f-6615-50d4-a4ab-b895fa009956","frontmatter":{"path":"/part-13/3-events","title":"Events"}}},{"node":{"id":"e994a5b9-4627-5809-8b15-263daf64bf08","frontmatter":{"path":"/part-13","title":"Part 13"}}},{"node":{"id":"d3c1d8d3-e3f5-50d9-83fb-1e53dc6dddb1","frontmatter":{"path":"/part-14/1-game-project","title":"Game project"}}},{"node":{"id":"2ec6985c-5be0-5d27-aabf-d0817ebff4a8","frontmatter":{"path":"/part-14/2-robot-and-boxes","title":"Robot and boxes"}}},{"node":{"id":"d09edb32-dc5c-51c0-ae48-7cfcf6b7cdfe","frontmatter":{"path":"/part-14/3-finishing-the-game","title":"Finishing the game"}}},{"node":{"id":"347660c5-f643-5a96-8f3b-60f2d51aa7b3","frontmatter":{"path":"/part-14/4-your-own-game","title":"Your own game"}}},{"node":{"id":"6bb53464-e977-5b78-82ce-44e757554cd3","frontmatter":{"path":"/part-14","title":"Part 14"}}},{"node":{"id":"5e72e85f-323a-5a32-be36-bd8e026dd74a","frontmatter":{"path":"/part-2/1-programming-terminology","title":"Programming terminology"}}},{"node":{"id":"d1b92b68-52a8-5e25-ad83-536040f40cc5","frontmatter":{"path":"/part-2/2-else-elif","title":"More conditionals"}}},{"node":{"id":"eb09e3ac-49b8-5d13-9d2f-5f8bbf112669","frontmatter":{"path":"/part-2/3-combining-conditions","title":"Combining conditions"}}},{"node":{"id":"7618f236-5b68-58cc-8e62-7a86af80fc8f","frontmatter":{"path":"/part-2/4-simple-loops","title":"Simple loops"}}},{"node":{"id":"d903d6d9-8340-59c2-a48c-06f71f3a6923","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"69613a91-713c-5726-b4f8-f59e78b0696d","frontmatter":{"path":"/part-3/1-loops-with-conditions","title":"Loops with conditions"}}},{"node":{"id":"bac61973-2367-5904-b726-b6c051a59057","frontmatter":{"path":"/part-3/3-more-loops","title":"More loops"}}},{"node":{"id":"c106c61c-a823-5860-9b98-f312dc8e8413","frontmatter":{"path":"/part-3/2-working-with-strings","title":"Working with strings"}}},{"node":{"id":"ef385e8e-ddbf-55b2-a834-c2997fdb47e5","frontmatter":{"path":"/part-3/4-defining-functions","title":"Defining functions"}}},{"node":{"id":"e78ff482-d4b8-5cf4-ba8d-92c6ec1c661e","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"56261f8a-2a82-550a-9336-3564d9a6e7c5","frontmatter":{"path":"/part-4/1-vscode","title":"The Visual Studio Code editor, Python interpreter and built-in debugging tool"}}},{"node":{"id":"add4f8e9-3849-5be8-8191-eba674071464","frontmatter":{"path":"/part-4/3-lists","title":"Lists"}}},{"node":{"id":"9fcb8907-d29d-5262-9544-78860a82381e","frontmatter":{"path":"/part-4/2-more-functions","title":"More functions"}}},{"node":{"id":"3ecf3785-4de0-5c84-95d7-c6498ea2b765","frontmatter":{"path":"/part-4/4-definite-iteration","title":"Definite iteration"}}},{"node":{"id":"52840ebe-c192-595a-ae3c-688627f0be02","frontmatter":{"path":"/part-4/5-print-statement-formatting","title":"Print statement formatting"}}},{"node":{"id":"6d1b67f8-1909-51fa-b74c-34a6e9267d6b","frontmatter":{"path":"/part-4/6-strings-and-lists","title":"More strings and lists"}}},{"node":{"id":"4e283e73-399f-5260-b3ed-932dda31c3ba","frontmatter":{"path":"/part-4","title":"Part 4"}}},{"node":{"id":"c87bf648-2f73-5faf-9e76-b4b1781d6da2","frontmatter":{"path":"/part-5/2-references","title":"References"}}},{"node":{"id":"bca23881-3e2b-5623-8348-8cb028067435","frontmatter":{"path":"/part-5/1-more-lists","title":"More lists"}}},{"node":{"id":"da8f64c9-4b18-5d19-bb7f-8fa9d3f8b5a3","frontmatter":{"path":"/part-5/3-dictionary","title":"Dictionary"}}},{"node":{"id":"cf3194c8-a4ab-5759-8366-bd41dd833d04","frontmatter":{"path":"/part-5/4-tuple","title":"Tuple"}}},{"node":{"id":"71913651-55a2-5d9f-9b39-138858d4db8c","frontmatter":{"path":"/part-5","title":"Part 5"}}},{"node":{"id":"6c654a56-bd67-555a-9020-4e9abba7bb3c","frontmatter":{"path":"/part-6/1-reading-files","title":"Reading files"}}},{"node":{"id":"2e59bc5b-2765-56f5-9157-6866b5d106d1","frontmatter":{"path":"/part-6/3-errors","title":"Handling errors"}}},{"node":{"id":"4ce6ab7f-0d9e-5163-988d-2699348e6cd8","frontmatter":{"path":"/part-6/2-writing-files","title":"Writing files"}}},{"node":{"id":"f7c55907-a0e2-5d80-b354-7c487bea7b11","frontmatter":{"path":"/part-6/4-scope-of-variables","title":"Local and global variables"}}},{"node":{"id":"1db7a1aa-e722-5620-81e9-9960deae86a8","frontmatter":{"path":"/part-6","title":"Part 6"}}},{"node":{"id":"af2f527a-7ae3-5600-a722-3a71428984e8","frontmatter":{"path":"/part-7/1-modules","title":"Modules"}}},{"node":{"id":"6c7ff390-3701-5aee-a487-5b2529418b14","frontmatter":{"path":"/part-7/2-randomness","title":"Randomness"}}},{"node":{"id":"e86ef479-89d1-5bdd-b967-ffcff2c45bce","frontmatter":{"path":"/part-7/3-times-and-dates","title":"Times and dates"}}},{"node":{"id":"ea1d4e15-c124-5cbc-a75c-a4102e9ec7dc","frontmatter":{"path":"/part-7/4-data-processing","title":"Data processing"}}},{"node":{"id":"7cd8f06d-38d6-5d2a-8b7a-f04e80e7ca6b","frontmatter":{"path":"/part-7","title":"Part 7"}}},{"node":{"id":"46169c3b-756a-5542-8d92-f84aee57b774","frontmatter":{"path":"/part-7/6-more-features","title":"More Python features"}}},{"node":{"id":"945adcf5-f021-5bd1-815f-3655ecde5663","frontmatter":{"path":"/part-8/1-objects-and-methods","title":"Objects and methods"}}},{"node":{"id":"36ffe48a-9556-5d85-9e9e-f3ec1e6bd9ca","frontmatter":{"path":"/part-8/2-classes-and-objects","title":"Classes and objects"}}},{"node":{"id":"43de7965-f580-5ba5-819a-566d6fdf40af","frontmatter":{"path":"/part-8/4-defining-methods","title":"Defining methods"}}},{"node":{"id":"b055b3ec-a7d9-5e15-8fd2-318110a1f085","frontmatter":{"path":"/part-8/3-defining-classes","title":"Defining classes"}}},{"node":{"id":"e791922f-dbda-5793-bffd-1cf283b2872f","frontmatter":{"path":"/part-9/1-objects-and-references","title":"Objects and references"}}},{"node":{"id":"9a5561e5-7976-5bad-958f-3361b06dfadc","frontmatter":{"path":"/part-8","title":"Part 8"}}},{"node":{"id":"57b5bd09-6a36-53d7-85d3-0ece2a2b329d","frontmatter":{"path":"/part-9/2-objects-as-attributes","title":"Objects as attributes"}}},{"node":{"id":"5df6a7a6-f157-5b8d-bc24-74d2b153e90e","frontmatter":{"path":"/part-9/3-encapsulation","title":"Encapsulation"}}},{"node":{"id":"cfd0300b-e723-5378-a257-4da3b49b4696","frontmatter":{"path":"/part-9/4-scope-of-methods","title":"Scope of methods"}}},{"node":{"id":"9962cf44-674c-5c60-82bf-9d295ea935bf","frontmatter":{"path":"/part-9/5-class-attributes","title":"Class attributes"}}},{"node":{"id":"dfa5f1e5-4287-596b-9566-dda80a954af5","frontmatter":{"path":"/part-9/6-more-examples-with-classes","title":"More examples with classes"}}},{"node":{"id":"65e235a7-73ba-57b8-a5f5-375352ed1147","frontmatter":{"path":"/part-9","title":"Part 9"}}},{"node":{"id":"016ea179-84d5-5ef7-afa2-1f42b32d19cc","frontmatter":{"path":"/part-8/5-more-examples-of-classes","title":"More examples of classes"}}},{"node":{"id":"ef4806a2-22f7-587f-8802-6ed1ad404e90","frontmatter":{"path":"/part-7/5-creating-modules","title":"Creating your own modules"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["1357757885","994120085"]}